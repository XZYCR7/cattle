(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{854:function(t,s,a){"use strict";a.r(s);var n=a(17),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),a("p",[t._v("Hello，我是 Leo。")]),t._v(" "),a("p",[t._v("每周五，我将对本周的 "),a("router-link",{attrs:{to:"/plan/monday-plan-002.html"}},[t._v("LeetCode 计划")]),t._v(" 进行复盘。")],1),t._v(" "),t._m(2),t._v(" "),a("p",[t._v("本周话题是 "),a("router-link",{attrs:{to:"/art/hash.html"}},[t._v("哈希表")]),t._v(" ，一共 7 个题目。")],1),t._v(" "),t._m(3),t._v(" "),a("p",[t._v("本周的哈希表题目，更多的是在利用哈希表的特性：对哈希表进行操作（查询、添加、删除）都具有 O(1) 的时间复杂度。为什么呢？下面我来总结一下。")]),t._v(" "),t._m(4),t._v(" "),a("p",[t._v("哈希表是怎样做的？")]),t._v(" "),a("p",[t._v("在这里，哈希表通过将学号映射为数组的下标：")]),t._v(" "),t._m(5),a("p",[t._v("我们将学号称为键值，映射的过程通过一个哈希函数来帮助完成，哈稀函数计算得到的值称为哈希值。")]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),a("p",[t._v("所以，如果不能从源头避免，那就从结果来处理。即出现了冲突怎么办？")]),t._v(" "),a("p",[t._v("这里有两种方式，一是开放寻址法，二是链表法。")]),t._v(" "),t._m(8),t._v(" "),a("p",[t._v("链表法就是说存储的数组的每一个位置都存放一个链表头，如果得到的哈希值相同就放入到相同位置的链表中，插入链表的时间复杂度为 O(1)。对于删除和查询来说，时间复杂度为 O(k)，k 为链表的长度，k = n / m（n 为哈希表中数据的个数，m 为哈希表中的位置个数），对于分布比较均匀的哈希表来说，k 可认定为一个常数，即 O(1)。")]),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),a("p",[t._v("操作对象：")]),t._v(" "),t._m(11),t._m(12),t._v(" "),t._m(13),a("p",[t._v("对于一个对象迭代它的方式是：")]),t._v(" "),t._m(14),t._m(15),t._v(" "),t._m(16),a("p",[t._v("需要特别注意的是，Map 的遍历顺序就是插入顺序。")]),t._v(" "),a("p",[t._v("来看一个在题目中经常用到的例子：利用哈希表来统计数组中每个数字出现的次数。")]),t._v(" "),t._m(17),t._m(18),t._v(" "),a("p",[t._v("点击下方每个题目，可直接跳转至题目解析：")]),t._v(" "),a("p",[a("router-link",{attrs:{to:"/solution/easy/500-keyboard-row.html"}},[t._v("500 键盘行")])],1),t._v(" "),a("p",[a("router-link",{attrs:{to:"/solution/easy/575-distribute-candies.html"}},[t._v("575 分糖果")])],1),t._v(" "),a("p",[a("router-link",{attrs:{to:"/solution/easy/594-longest-harmonious-subsequence.html"}},[t._v("594 最长和谐子序列")])],1),t._v(" "),a("p",[a("router-link",{attrs:{to:"/solution/easy/599-minimum-index-sum-of-two-lists.html"}},[t._v("599 两个列表的最小索引总和")])],1),t._v(" "),a("p",[a("router-link",{attrs:{to:"/solution/easy/645-set-mismatch.html"}},[t._v("645 错误的集合")])],1),t._v(" "),t._m(19),t._v(" "),a("p",[a("router-link",{attrs:{to:"/solution/easy/720-longest-word-in-dictionary.html"}},[t._v("720 词典中最长的单词")])],1)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"第-2-周-哈希表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-2-周-哈希表","aria-hidden":"true"}},[this._v("#")]),this._v(" 第 2 周 - 哈希表")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://w3fun-1253290453.cos.ap-chengdu.myqcloud.com/cattle/review/fr-002.jpg",alt:"Friday Review 002"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[this._v("#")]),this._v(" 总结")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"哈希表简述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哈希表简述","aria-hidden":"true"}},[this._v("#")]),this._v(" 哈希表简述")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("我们知道"),s("strong",[this._v("数组可按照下标进行随机访问")]),this._v("，时间复杂度为 O(1)。哈希表就利用了数组这种特性。比如现在有学号 "),s("code",[this._v("150101~150130")]),this._v(" 的学生，现在我要查询学号为 "),s("code",[this._v("150109")]),this._v(" 的学生的信息。遍历？时间复杂度为 O(n)。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取学号最后两位")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hash")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("通过上面的转换，学号 "),a("code",[t._v("150101~150130")]),t._v(" 都转换成了 "),a("code",[t._v("0~29")]),t._v(" 的下标，现在我要查询 "),a("code",[t._v("150109")]),t._v(" 的信息，就会去访问下标为 "),a("code",[t._v("8")]),t._v(" 的数组项，时间复杂度为 O(1)。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("现在有学号 "),a("code",[t._v("150101~150130")]),t._v(" 和 "),a("code",[t._v("150201~150230")]),t._v("，如果再按照上面的哈希函数来处理，就会出现冲突，"),a("code",[t._v("150101")]),t._v(" 和 "),a("code",[t._v("150201")]),t._v(" 的下标都是 "),a("code",[t._v("0")]),t._v("。我们可以通过更换哈希函数来重新计算更优的哈希值，但是几乎是没办法找到完美的哈希函数的，即便能找到，成本也过高。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("开放寻址的基本思想是如果出现冲突，那么就在这个位置之后找到一个空闲位置，可以依次判断，也可以按照 "),s("code",[this._v("1，2^2，3^2 ...")]),this._v(" 这样的步长往后面判断。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"js-中的哈希表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-中的哈希表","aria-hidden":"true"}},[this._v("#")]),this._v(" JS 中的哈希表")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("JavaScript 中的有两种使用哈希表的方式，一是对象，二是 "),s("code",[this._v("Map")]),this._v("。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'key'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("Map")]),this._v(" 是 ES6 新增的数据结构，类似于对象，也是键值对的集合，但是键的范围不限于字符串。我们来操作一个 "),s("code",[this._v("Map")]),this._v("：")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" map "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查询，返回 key 所映射的值")]),t._v("\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加 or 修改")]),t._v("\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("has")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查询，返回一个布尔值")]),t._v("\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除")]),t._v("\n\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 清空")]),t._v("\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Map 结构的成员总数")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("for (key in obj) {}\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("对于 "),s("code",[this._v("Map")]),this._v(" 来说，迭代的方式有：")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("entries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" map "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"题目解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#题目解析","aria-hidden":"true"}},[this._v("#")]),this._v(" 题目解析")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("a",{attrs:{href:""}},[this._v("690 员工的重要性")])])}],!1,null,null,null);s.default=e.exports}}]);