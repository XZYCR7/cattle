(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{856:function(t,s,a){"use strict";a.r(s);var e=a(17),r=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),a("p",[t._v("Hello，我是 Leo。")]),t._v(" "),a("p",[t._v("每周五，我将对本周的 "),a("router-link",{attrs:{to:"/plan/monday-plan-003.html"}},[t._v("LeetCode 计划")]),t._v(" 进行复盘。")],1),t._v(" "),t._m(2),t._v(" "),a("p",[t._v("本周话题是 "),a("router-link",{attrs:{to:"/art/tree.html"}},[t._v("树")]),t._v(" ，一共 7 个题目。这篇文章来聊聊二叉搜索树。")],1),t._v(" "),t._m(3),t._v(" "),a("p",[t._v("数组是一种线性表数据结构，用一组连续的内存空间，来存储一组具有相同类型的数据。计算机会给每个内存单元分配一个地址，计算机通过地址来访问内存中的数据。当计算机需要随机访问数组中的某个元素时，就会通过一个寻址公式进行计算：")]),t._v(" "),t._m(4),t._m(5),t._v(" "),a("p",[t._v("因此，随机访问数组中的某个元素时，时间复杂度为 O(1)。")]),t._v(" "),a("p",[t._v("这里有一个误解：数组查询的时间复杂度为 O(1)。这是错的。当在数组中找到某个具体的值时，也得从头开始遍历，因此时间复杂度为 O(n)。")]),t._v(" "),t._m(6),t._v(" "),a("p",[t._v("在 JavaScript 中，数组是非常常用的一个内置数据类型。")]),t._v(" "),a("p",[t._v("先说说 JavaScript 中的数组与 C 中的数组有哪些区别：")]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),a("p",[t._v("在刷题的过程中，经常会遇到使用的数组方法：")]),t._v(" "),a("p",[t._v("1、数组求和")]),t._v(" "),t._m(9),a("p",[t._v("详见 1013 将数组分成和相等的三个部分")]),t._v(" "),a("p",[t._v("2、生成长度为 n 的数组，并且数组每项都初始化为 0")]),t._v(" "),t._m(10),t._m(11),t._v(" "),a("p",[t._v("详见 1010 总持续时间可被 60 整除的歌曲")]),t._v(" "),a("p",[t._v("3、数组的排序")]),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._m(15),t._v(" "),a("p",[t._v("点击下方每个题目，可直接跳转至题目解析：")]),t._v(" "),a("p",[a("router-link",{attrs:{to:"/solution/easy/589-n-ary-tree-preorder-traversal.html"}},[t._v("589 N 叉树的前序遍历")])],1),t._v(" "),a("p",[a("router-link",{attrs:{to:"/solution/easy/590-n-ary-tree-postorder-traversal.html"}},[t._v("590 N 叉树的后序遍历")])],1),t._v(" "),a("p",[a("router-link",{attrs:{to:"/solution/easy/700-search-in-binary-tree.html"}},[t._v("700 二叉搜索树中的搜索")])],1),t._v(" "),a("p",[a("router-link",{attrs:{to:"/solution/easy/783-minimum-distance-between-bst-nodes.html"}},[t._v("783 二叉搜索树结点最小距离")])],1),t._v(" "),a("p",[a("router-link",{attrs:{to:"/solution/easy/872-leaf-similar-tree.html"}},[t._v("872 叶子相似的树")])],1),t._v(" "),a("p",[a("router-link",{attrs:{to:"/solution/easy/897-increasing-order-search-tree.html"}},[t._v("897 递增顺序查找树")])],1),t._v(" "),a("p",[a("router-link",{attrs:{to:"/solution/easy/938-range-sum-of-bst.html"}},[t._v("938 二叉搜索树的范围和")])],1)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"第-4-周-树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-4-周-树","aria-hidden":"true"}},[this._v("#")]),this._v(" 第 4 周 - 树")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://w3fun-1253290453.cos.ap-chengdu.myqcloud.com/cattle/review/fr-003.jpg",alt:"Friday Review 002"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[this._v("#")]),this._v(" 总结")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"数组简述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组简述","aria-hidden":"true"}},[this._v("#")]),this._v(" 数组简述")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("a[i]_address = base_address + i * data_type_size\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("data_type_size")]),this._v(" 在这里是数组中每个元素的大小。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"js-中的数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-中的数组","aria-hidden":"true"}},[this._v("#")]),this._v(" JS 中的数组")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("JavaScript 中数组的长度是动态的；")]),this._v(" "),s("li",[this._v("JavaScript 中的数组不会限制同一数组中的元素必须为同一类型；")]),this._v(" "),s("li",[this._v("JavaScript 中数组可以允许存在索引不连续的项。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("在 JavaScript 中，可以将数组作为一个栈或者队列，只需要调用 "),a("code",[t._v("push()")]),t._v("、"),a("code",[t._v("pop()")]),t._v(" 就可以模拟一个栈，而调用 "),a("code",[t._v("push()")]),t._v("、"),a("code",[t._v("shift()")]),t._v(" 就可以模拟一个队列。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("prev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" prev "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" array "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("使用了 ES6 新增的 "),s("code",[this._v("fill()")]),this._v(" 方法，直接使用 Array，生成的数组所有项为 "),s("code",[this._v("undefined")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("JavaScript 中提供了 "),s("code",[this._v("sort()")]),this._v(" 方法进行排序，其内部实现在大于 10 个数据项时采用的快排，小于 10 个采用的插入排序。但是 "),s("code",[this._v("sort()")]),this._v(" 存在一个问题是，默认转换为 ASCII 码进行排序，即整数 12 会小于 2。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("所以，对于数字类型来说，正确使用 "),s("code",[this._v("sort()")]),this._v(" 的方式是：")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 升序")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 降序")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"题目解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#题目解析","aria-hidden":"true"}},[this._v("#")]),this._v(" 题目解析")])}],!1,null,null,null);s.default=r.exports}}]);